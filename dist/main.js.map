{"version":3,"sources":["webpack:///webpack/bootstrap 1a72b23e1fa462b8fa2d?d295","webpack:///./src/main.ts","webpack:///external \"electron\"?6928"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA,sCAA4E;AAEL;AACxC;AAEU;AACzC,KAAc;AACd,KAAQ,OAAO;AAEf;AAC2B;AACqB;AACpC,kBACZ;AAAC;AAED;AACE,SAAS,UAAO,WAAa;AACtB,gBAAM;AACL,iBAAM;AACR,eAAO;AACI,0BAAW;AACL;AACL;AACD,0BAAM;AACD;AACP,wBAAU;AACf,mBAAoB;AACjB,sBACX;AAZ4B,MAAlB;AAaT,SAAkB,kBAAM;AACxB,SAAS,oBAAkC;AAC3C,SAAW;AACY;AACvB,SAAO;AACP,SAAG,GAAS,UAAW;AACvB,SAAG,GAAoB,qBAAE;AACnB,iBAAI,IACb;AAAE;AACI,YACR;AAAC;AAED,YAAG,IAAG,GAAoB,qBAAE;AACvB,SAAQ,QAAS,aAAc,UAAE;AAClC,oBAAG,IACL;AACF;AAAG;AAEH,YAAG,IAAG,GAAW,YAAE;AACd,SAAC,CAAY,YAAE;AACN,sBACZ;AACF;AAAG;AAEH,YAAG,IAAG,GAAQ,SAAE;AACgJ;AACA;AAG5J;;;AACqC;AACR;AACrB,kBACZ;AAAG,I;;;;;;;AC9DH,sC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1a72b23e1fa462b8fa2d","import { app, Tray, BrowserWindow, ipcMain, globalShortcut } from 'electron'\n\n// adds debug features like hotkeys for triggering dev tools and reload\n// require('electron-debug')();\n\n// prevent window being garbage collected\nlet mainWindow\nlet tray = null\n\nfunction onClosed() {\n  // dereference the window\n  // for multiple windows store them in an array\n  mainWindow = null;\n}\n\nfunction createMainWindow() {\n  const win = new BrowserWindow({\n    width: 1920,\n    height: 1200,\n    show: false,\n    backgroundColor: '#36312c',\n    // transparent: true,\n    // frame: false,\n    autoHideMenuBar: true,\n    // fullscreen: true,\n    titleBarStyle: 'hidden',\n    vibrancy: 'appearance-based',\n    skipTaskbar: false\n  })\n  win.setDocumentEdited(true)\n  win.loadURL(`file://${__dirname}/index.html`);\n  win.maximize()\n  // win.setFullScreen(true)\n  win.show()\n  win.on('closed', onClosed)\n  win.on('enter-full-screen', () => {\n    console.log('fullscreen')\n  })\n  return win;\n}\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  if (!mainWindow) {\n    mainWindow = createMainWindow();\n  }\n});\n\napp.on('ready', () => {\n  // BrowserWindow.addDevToolsExtension('/Users/xuhong/Library/Application\\ Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/0.15.4_0')\n  // BrowserWindow.addDevToolsExtension('/Users/xuhong/Library/Application\\ Support/Google/Chrome/Default/Extensions/lmhkpmbekcpmknklioeibfkpmmfibljd/2.11.1_0')\n  /*\n  * set tray icon\n  */\n  // tray = new Tray('/path/to/icon.png')\n  // tray.setTitle('hello world')\n  mainWindow = createMainWindow();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","module.exports = require(\"electron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron\"\n// module id = 423\n// module chunks = 0 1"],"sourceRoot":""}